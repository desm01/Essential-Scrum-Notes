Essential Scrum Notes:
  - Chapter 1 -> Introduction what is SCRUM?
  Scrum is Agile framework, create a Product backlog. Run through highest priority items. Time is resource.
  Cross functional team: Does design, implemenation & deploys. Short bursts 1-4 weeks. All about functionality.
  Product owner gets it reviewed by stakeholders -> Informs next sprint

  All about powerful self-organising teams -> Ants!
  Scrum works on many diffrent projects -> Not just software.

  Big up front architecutre ==== BAD. Make it easy to change things in the future. (SELF ORGANISING)

  Scrum provides good cross functional communication. 
  Scrum 7 times faster than waterfall approach.
  Most places no worse than compeitiors. No DISTRUPTION.

  Scrum:
    - Delight customers
    - Improved return on investment
    - Reduced costs
    - Fast results
    - Confidence to suceed in complex world
    - Improved worker morale

We want to reduce coupling in teams -> Increase cohesion in teams.
Fast delivery -> Easy to revert / fix things


Cynefin Framework:

  -Complex domain:
When dealing with complex problems, things are more unpredictable. 

If there's an answer we'll know it in hindsight -> Domain of emergence. 
We need to inspect to learn about problems -> Adapt our learnings.
Complex domain requires creativity. -> Safe / Fail environment
Scrum allows for innovative product design

 - Complicated Domain:
Complicated problems are the domains of good practices dominated by experts. Multiple right answers, but expert guidance needed.
Scrum can work, not the best. More tactical apporach like 6 sigma needed; conenseous amongst experts needed. Hard to get that rapidly when sprinting.

  -Simple Domain:
Everyone can see cause and effect. Known solutions. Follow best practices. 
Well defined assembly line production environment better than Scrum.

  -Chaotic Domain:
Requires rapid response. Not intrested in prioritising the backlog, focus on immediate fix. Needs individual action.

  -Disorder:
In disorder domain when -> Don't know which domain you're in. Struggle to make sense of situation. 
People interpret and act based on personal preference.
Way out -> Break down situation into constituent parts, assign each to the dour domains. Goal is to GET OUT.

Interrupt Driven Work:
Scrum not good when work is highly interrupted. Customer support. Backlog constantly interrupted and mutated.
Can't realibly plan for the future.
Kanban is probably better here

Kanban advocates for:
  - Visualise how the work flows through the system. Steps people take to resolve the problem
  - Limit the WIP at every step. 
  - Optimise and measure the flow of work through the system. Continious imoprovement.

Kanban -> Better for Customer Support / Software maintenance. Optimise WIP with Capacity.
Reduce variability in flow of work. Encourage evolutionary approach to change.



:END:

Scrum is not silver bullet.
Allows you to embrace CHANGE over Software Dev lifecycle.
Empowers teams to answer / ask great questions.
Makes visible the dysfunction.

